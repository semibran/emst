{"version":3,"file":"script.js","sources":["../../lib/graph-mst.js","../node_modules/.registry.npmjs.org/euclidean/0.0.0/node_modules/euclidean/index.js","../src/script.js"],"sourcesContent":["module.exports = function span(graph) {\n  var tree = {\n    nodes: graph.nodes.slice(),\n    edges: []\n  }\n  var edges = graph.edges\n    .slice()\n    .sort(function (a, b) { return a.weight - b.weight })\n  var nodes = [ 0 ]\n  for (var i = 0; nodes.length < graph.nodes.length; i++) {\n    var edge = edges[i]\n    var a = edge.endpoints[0]\n    var b = edge.endpoints[1]\n    for (var j = 0; j < nodes.length; j++) {\n      var origin = nodes[j]\n      var target = -1\n      if (a === origin) {\n        target = b\n      } else if (b === origin) {\n        target = a\n      }\n      if (target !== -1) {\n        if (nodes.indexOf(target) === -1) {\n          nodes.push(target)\n          tree.edges.push(edge)\n          edges.splice(i, 1)\n          i = -1\n        }\n        break\n      }\n    }\n  }\n  return tree\n}\n","module.exports = function distance(a, b) {\n  var quadrance = 0\n  var dimensions = Math.max(a.length, b.length)\n  for (var i = 0; i < dimensions; i++) {\n    var distance = (b[i] || 0) - (a[i] || 0)\n    quadrance += distance * distance\n  }\n  return Math.sqrt(quadrance)\n}\n","import span from \"../../lib/graph-mst\"\nimport euclidean from \"euclidean\"\n\nlet size = Math.min(window.innerWidth, window.innerHeight)\nlet graph = {\n  edges: [],\n  nodes: new Array(512)\n    .fill()\n    .map(_ => {\n      let direction = Math.random() * 2 * Math.PI\n      let magnitude = Math.sqrt(Math.random())\n      return [\n        Math.cos(direction) * magnitude,\n        Math.sin(direction) * magnitude\n      ]\n    })\n}\n\ngraph.nodes.sort((a, b) => euclidean([ 0, 0 ], a) - euclidean([ 0, 0 ], b))\n\nfor (let i = 0; i < graph.nodes.length - 1; i++) {\n  for (let j = i + 1; j < graph.nodes.length; j++) {\n    graph.edges.push({\n      endpoints: [ i, j ],\n      weight: euclidean(graph.nodes[i], graph.nodes[j])\n    })\n  }\n}\n\nlet tree = span(graph)\nlet state = {\n  graph: tree,\n  animation: {\n    phase: \"spawn\",\n    nodes: [],\n    edges: [],\n    lines: [],\n    history: []\n  },\n  viewport: {\n    scale: size / 2.5,\n    halfsize: [ size / 2, size / 2 ],\n    position: [ 0, 0 ]\n  }\n}\n\nlet context = render(state)\ndocument.body.appendChild(context.canvas)\nrequestAnimationFrame(loop)\n\nfunction loop() {\n  let { graph, animation } = state\n  let phase = animation[animation.phase]\n  if (animation.phase === \"spawn\") {\n    if (animation.nodes.length < graph.nodes.length) {\n      animation.nodes.push([ 0, 0 ])\n    }\n    let farthest = 0\n    for (let i = 0; i < animation.nodes.length; i++) {\n      let position = animation.nodes[i]\n      let target = graph.nodes[i]\n      let next = animation.nodes[i] = [\n        position[0] + (target[0] - position[0]) / 16,\n        position[1] + (target[1] - position[1]) / 16\n      ]\n      let distance = euclidean(position, target)\n      if (distance > farthest) {\n        farthest = distance\n      }\n    }\n    if (farthest < 1 / 256) {\n      animation.phase = \"connect\"\n      animation.nodes = graph.nodes\n    }\n  } else if (animation.phase === \"connect\") {\n    let { lines, history } = animation\n    if (!lines.length) {\n      let best = { distance: Infinity, node: null }\n      for (let node of graph.nodes) {\n        let distance = Math.sqrt(node[0] * node[0] + node[1] * node[1])\n        if (distance < best.distance) {\n          best.distance = distance\n          best.node = node\n        }\n      }\n      history.push(best.node)\n      lines.push({\n        origin: best.node,\n        position: best.node.slice(),\n        target: null\n      })\n    }\n    for (let i = 0; i < lines.length; i++) {\n      let line = lines[i]\n      if (!line.target) {\n        for (let edge of graph.edges) {\n          let [ a, b ] = edge.endpoints.map(i => graph.nodes[i])\n          let target = null\n          if (a === line.origin) {\n            target = b\n          } else if (b === line.origin) {\n            target = a\n          }\n          if (target && history.indexOf(target) === -1) {\n            history.push(target)\n            if (!line.target) {\n              line.target = target\n            } else {\n              lines.push({\n                origin: line.origin,\n                position: line.origin.slice(),\n                target: target\n              })\n            }\n          }\n        }\n        if (!line.target) {\n          lines.splice(i--, 1)\n          continue\n        }\n      }\n      let distance = euclidean(line.position, line.target)\n      if (distance < 1 / 64) {\n        animation.edges.push([ line.origin, line.target ])\n        line.origin = line.target\n        line.position = line.target.slice()\n        line.target = null\n        if (animation.edges.length === graph.edges.length) {\n          animation.phase = \"done\"\n        }\n      } else {\n        let delta = [\n          line.target[0] - line.origin[0],\n          line.target[1] - line.origin[1]\n        ]\n        let direction = Math.atan2(delta[1], delta[0])\n        line.position[0] += Math.cos(direction) * 1 / 64,\n        line.position[1] += Math.sin(direction) * 1 / 64\n      }\n    }\n  }\n\n  render(state, context)\n\n  if (animation.phase !== \"done\") {\n    console.log(state)\n    requestAnimationFrame(loop)\n  }\n}\n\nfunction render(state, context) {\n  let { animation, viewport } = state\n  let scale = adjust.bind(null, viewport)\n  let canvas = null\n  if (!context) {\n    canvas = document.createElement(\"canvas\")\n    context = canvas.getContext(\"2d\")\n    canvas.width = viewport.halfsize[0] * 2\n    canvas.height = viewport.halfsize[1] * 2\n  } else {\n    canvas = context.canvas\n  }\n\n  context.clearRect(0, 0, canvas.width, canvas.height)\n\n  for (let line of animation.lines) {\n    context.strokeStyle = \"gray\"\n    context.beginPath()\n    context.moveTo(...line.origin.map(scale))\n    context.lineTo(...line.position.map(scale))\n    context.stroke()\n  }\n\n  for (let node of animation.nodes) {\n    context.fillStyle = \"white\"\n    context.beginPath()\n    context.arc(...node.map(scale), 1, 0, 2 * Math.PI)\n    context.fill()\n  }\n\n  for (let edge of animation.edges) {\n    let [ a, b ] = edge\n\n    context.strokeStyle = \"white\"\n    context.beginPath()\n    context.moveTo(...a.map(scale))\n    context.lineTo(...b.map(scale))\n    context.stroke()\n\n    context.fillStyle = \"white\"\n    context.beginPath()\n    context.arc(...a.map(scale), 2, 0, 2 * Math.PI)\n    context.fill()\n    context.beginPath()\n    context.arc(...b.map(scale), 2, 0, 2 * Math.PI)\n    context.fill()\n  }\n\n  return context\n}\n\nfunction adjust(viewport, x, i) {\n  return x * viewport.scale + viewport.halfsize[i] - viewport.position[i]\n}\n"],"names":["span"],"mappings":"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"}